---

- name: Converge
  hosts: all
  environment:
    http_proxy: "{{ lookup('env', 'http_proxy') }}"
    https_proxy: "{{ lookup('env', 'https_proxy') }}"
    no_proxy: "{{ lookup('env', 'no_proxy') }}"
  remote_user: root
  vars:
    bricksllm_mode: native
    redis_requirepass: "password"
    postgresql_users:
      - name: bricksllm
        password: "password"
        db: bricksllmdb
    postgresql_databases:
      - name: bricksllmdb
        owner: bricksllm
    postgresql_hba_entries:
      - {type: local, database: all, user: postgres, auth_method: peer}
      - {type: local, database: all, user: all, auth_method: peer}
      - {type: local, database: all, user: bricksllm, auth_method: "{{ postgresql_auth_method }}"}
      - {type: host, database: all, user: all, address: '127.0.0.1/32', auth_method: "{{ postgresql_auth_method }}"}
      - {type: host, database: all, user: all, address: '::1/128', auth_method: "{{ postgresql_auth_method }}"}
    postgres_users_no_log: false
    bricksllm_no_log: false
  pre_tasks:
    - name: Ubuntu | Install python3
      ansible.builtin.raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3-minimal)
      register: python3
      changed_when: "'installed' in python3.stdout"
      when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version | int >= 16)
    - name: RedHat | Install python3
      ansible.builtin.raw: test -e /usr/bin/python3 || (yum install -y python3)
      register: python3
      changed_when: "'installed' in python3.stdout"
      when: (ansible_os_family == "RedHat" and ansible_distribution_major_version | int >= 8)
    - name: Gather Facts
      ansible.builtin.setup:
      when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version | int >= 16)
    - name: Ubuntu Bionic+, Redhat 8+ | Enforce python3 for ansible
      ansible.builtin.set_fact:
        ansible_python_interpreter: /usr/bin/python3
      when: >
        (ansible_distribution == "Ubuntu" and ansible_distribution_major_version | int >= 16) or
        (ansible_os_family == "RedHat" and ansible_distribution_major_version | int >= 8)
    - name: Debian | Update apt cache
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: "{{ bricksllm_apt_cache_valid_time | default(3600) }}"
      when: ansible_os_family == 'Debian'
  roles:
    - juju4.golang
    - geerlingguy.postgresql
    - geerlingguy.redis
    - juju4.bricksllm
  tasks:
    - name: Install psql for manual debug
      ansible.builtin.package:
        name: postgresql-client
        state: present
